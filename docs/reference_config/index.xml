<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reference: Config on</title><link>https://viash.io/docs/reference_config/</link><description>Recent content in Reference: Config on</description><generator>Hugo -- gohugo.io</generator><language>en-GB</language><lastBuildDate>Fri, 28 May 2021 14:00:00 +0000</lastBuildDate><atom:link href="https://viash.io/docs/reference_config/index.xml" rel="self" type="application/rss+xml"/><item><title>Config File</title><link>https://viash.io/docs/reference_config/config/</link><pubDate>Fri, 28 May 2021 14:00:00 +0000</pubDate><guid>https://viash.io/docs/reference_config/config/</guid><description>The Viash config file A Viash config file describes the behaviour of a script and the platform it runs on. It consists of two main sections: functionality and platforms.
The functionality section describes the core functionality of the component, such as its inputs, outputs, arguments, and extra resources. For each of the arguments, specifying a description and a set of argument restrictions help create a useful command-line interface. To ensure that your component works as expected, writing one or more tests is essential.</description></item><item><title>Functionality</title><link>https://viash.io/docs/reference_config/functionality/</link><pubDate>Fri, 28 May 2021 14:00:00 +0000</pubDate><guid>https://viash.io/docs/reference_config/functionality/</guid><description>By specifying a few restrictions (e.g. mandatory arguments) and adding some descriptions, Viash will automatically generate a stylish command-line interface for you.
Example An example of such a functionality yaml can be found below, each part of which is explained in more depth in the following sections.
functionality: name: exe namespace: my_namespace version: &amp;quot;1.0.0&amp;quot; description: | This component performs function Y and Z. It is possible to make this a multiline string.</description></item><item><title>Native Platform</title><link>https://viash.io/docs/reference_config/platform-native/</link><pubDate>Fri, 28 May 2021 14:00:00 +0000</pubDate><guid>https://viash.io/docs/reference_config/platform-native/</guid><description>Any dependencies are assumed to have been installed by the user, so the native platform is meant for developers (who know what they’re doing) or for simple bash scripts (which have no extra dependencies).
Example An example of a native platform yaml can be found below, each part of which is explained in more depth in the following sections.
platforms: - type: native id: native_platform version: &amp;quot;1.0.0&amp;quot; id [string] As with all platforms, you can give a platform a different name.</description></item><item><title>Docker Platform</title><link>https://viash.io/docs/reference_config/platform-docker/</link><pubDate>Fri, 28 May 2021 14:00:00 +0000</pubDate><guid>https://viash.io/docs/reference_config/platform-docker/</guid><description>By specifying which dependencies your component needs, users will be able to build a docker container from scratch using the setup flag, or pull it from a docker repository.
Example An example of a docker platform yaml can be found below, each part of which is explained in more depth in the following sections.
- type: docker id: custom_platform_name image: bash:4.0 version: &amp;quot;0.1.0&amp;quot; target_image: myorganisation/example_docker chown: true port: [80, 8080] workdir: /app setup: - type: docker build_args: - GITHUB_PAT=&amp;quot;$GITHUB_PAT&amp;quot; - type: apt packages: - imagemagick - type: r cran: - tidyverse - dynutils - type: docker run: - &amp;quot;git clone https://github.</description></item><item><title>Nextflow Platform</title><link>https://viash.io/docs/reference_config/platform-nextflow/</link><pubDate>Fri, 28 May 2021 14:00:00 +0000</pubDate><guid>https://viash.io/docs/reference_config/platform-nextflow/</guid><description>Example This is an example of a NextFlow platform definition:
... platforms: ... - type: nextflow publish: true # default = false per_id: false # default = true label: highmem id [string] Every platform can be given a specific id that can later be referred to explicitly when running or building the Viash component.
image [string], tag/version [string] and registry [string] If no image attributes are configured, Viash will use the auto-generated image name from the Docker platform:</description></item></channel></rss>