<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Creating Components on</title><link>https://viash.io/docs/creating_components/</link><description>Recent content in Creating Components on</description><generator>Hugo -- gohugo.io</generator><language>en-GB</language><lastBuildDate>Fri, 28 May 2021 14:00:00 +0000</lastBuildDate><atom:link href="https://viash.io/docs/creating_components/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a Bash Component</title><link>https://viash.io/docs/creating_components/bash/</link><pubDate>Fri, 28 May 2021 14:00:00 +0000</pubDate><guid>https://viash.io/docs/creating_components/bash/</guid><description>In this tutorial, you’ll create a component that does the following:
Extract all hyperlinks from a markdown file Check if every URL is reachable Create a text report with the results The component will be able to run locally and as a docker container. In order to create a component you need two files: a script for the functionality and a config file that describes the component.
The files used in this tutorial can be found here:</description></item><item><title>Creating a Python Component</title><link>https://viash.io/docs/creating_components/python/</link><pubDate>Fri, 28 May 2021 14:00:00 +0000</pubDate><guid>https://viash.io/docs/creating_components/python/</guid><description>In this tutorial, you’ll create a component that does the following:
Extract all hyperlinks from a markdown file Check if every URL is reachable Create a text report with the results The component will be able to run locally and as a docker container. In order to create a component you need two files: a script for the functionality and a config file that describes the component.
The files used in this tutorial can be found here:</description></item><item><title>Creating an R Component</title><link>https://viash.io/docs/creating_components/r/</link><pubDate>Fri, 28 May 2021 14:00:00 +0000</pubDate><guid>https://viash.io/docs/creating_components/r/</guid><description>In this tutorial, you’ll create a component that does the following:
Extract all hyperlinks from a markdown file Check if every URL is reachable Create a text report with the results The component will be able to run locally and as a docker container. In order to create a component you need two files: a script for the functionality and a config file that describes the component.
The files used in this tutorial can be found here:</description></item><item><title>Supported Languages</title><link>https://viash.io/docs/creating_components/supported_languages/</link><pubDate>Fri, 28 May 2021 14:00:00 +0000</pubDate><guid>https://viash.io/docs/creating_components/supported_languages/</guid><description>To get started with your preferred language, take a look at the language specific examples below.
Bash Creating a Bash component: This tutorial explains how to create your own Viash component from scratch using a Bash script at its core. Python Creating a Python component: This tutorial explains how to create your own Viash component from scratch using a Python script at its core. R Creating an R component: This tutorial explains how to create your own Viash component from scratch using an R script at its core.</description></item><item><title>Regarding File Formats</title><link>https://viash.io/docs/creating_components/file_formats/</link><pubDate>Mon, 07 Jun 2021 14:00:00 +0000</pubDate><guid>https://viash.io/docs/creating_components/file_formats/</guid><description>The following two file formats are equivalent.
Config format Metadata config.vsh.yaml:
functionality: name: hello arguments: - name: &amp;quot;name&amp;quot; type: string default: Bob resources: - type: bash_script path: script.sh platforms: - type: native Script script.sh:
#!/bin/bash echo Hello $par_name Script format Script script.vsh.sh:
#!/bin/bash #' functionality: #' name: hello #' arguments: #' - name: &amp;quot;name&amp;quot; #' type: string #' default: Bob #' platforms: #' - type: native echo Hello $par_name</description></item></channel></rss>